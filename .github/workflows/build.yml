name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  id-token: write

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.x'
      
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.8.2'
      
      - name: Install dependencies
        run: poetry install
      
      - name: Create .env file
        run: |
          touch .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
        shell: bash

      - name: Run black
        run: black --check .

      - name: Run isort
        run: isort . --check-only

      - name: Run ruff
        run: ruff check .

      - name: Run mypy
        run: mypy src

      - name: Run pytest with coverage
        run: pytest
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
